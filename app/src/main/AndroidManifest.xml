<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.my.game.wesport">

    <!--
         The ACCESS_COARSE/FINE_LOCATION permissions are not required to use
         Google Maps Android API v2.
    -->
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="com.google.android.providers.gsf.permission.READ_GSERVICES" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.READ_CALENDAR" />
    <uses-permission android:name="android.permission.WRITE_CALENDAR" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_CONTACTS" />
    <uses-permission android:name="android.permission.WRITE_CONTACTS" />

    <uses-feature
        android:glEsVersion="0x00020000"
        android:required="true" />

    <application
        android:name=".App"
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/AppTheme"
        tools:ignore="AllowBackup">
        <activity
            android:name=".activity.MainActivity"
            android:launchMode="singleTop"
            android:theme="@style/AppTheme.NoActionBar">
            <!--<intent-filter>
                &lt;!&ndash;for notification&ndash;&gt;
                <action android:name="OPEN_HOME_ACTIVITY" />
            </intent-filter>-->
        </activity>
        <!--
             The API key for Google Maps-based APIs is defined as a string resource.
             (See the file "res/values/google_maps_api.xml").
             Note that the API key is linked to the encryption key used to sign the APK.
             You need a different API key for each encryption key, including the release key that is used to
             sign the APK for publishing.
             You can define the keys for the debug and release targets in src/debug/ and src/release/.
        -->

        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />
        <meta-data
            android:name="com.google.android.geo.API_KEY"
            android:value="@string/google_maps_key" />

        <activity
            android:name=".activity.GameEditActivity"
            android:label="@string/app_name" />

        <!--
            <provider
            android:name=".data.GameProvider"
            android:authorities="com.my.game.wesport"
            android:exported="false" />
        -->

        <activity
            android:name=".activity.IntroActivity"
            android:label="@string/app_intro" />
        <activity
            android:name=".login.SigninActivity"
            android:screenOrientation="portrait"
            android:theme="@style/GreenTheme">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:launchMode="singleTop"
            android:name=".ui.ChatActivity"
            android:label="@string/title_activity_chat"
            android:screenOrientation="portrait"
            android:windowSoftInputMode="adjustResize" />
        <activity
            android:name=".activity.MapsActivity"
            android:label="@string/title_activity_maps"
            android:parentActivityName=".activity.MainActivity" />

        <receiver android:name="gameswidget.DetailWidgetProvider">
            <intent-filter>
                <!--
    This widget provider receives broadcast with following action
    name or simply onUpdate of AppWidgetProvider is called
                -->
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
                <action android:name="com.example.android.wesport.app.ACTION_DATA_UPDATED" />
            </intent-filter>
            <!-- linking up xml file of appwidget-provider to AppWidgetProvider -->
            <meta-data
                android:name="android.appwidget.provider"
                android:resource="@xml/widgetinfo" />
        </receiver>

        <service
            android:name="gameswidget.DetailWidgetRemoteViewsService"
            android:permission="android.permission.BIND_REMOTEVIEWS" />

        <activity
            android:name=".ui.MyGamesActivity"
            android:label="@string/title_activity_my_games"
            android:theme="@style/MyMaterialTheme" />
        <activity android:name=".userinvites.DeepLinkActivity">
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />

                <data
                    android:host="game.wesport.com"
                    android:scheme="http" />
                <data
                    android:host="game.wesport.com"
                    android:scheme="https" />
            </intent-filter>
        </activity>
        <activity
            android:name=".activity.UserProfileActivity"
            android:screenOrientation="portrait"
            android:theme="@style/AppTheme.NoActionBar" />

        <service android:name=".services.TokenService">
            <intent-filter>
                <action android:name="com.google.firebase.INSTANCE_ID_EVENT" />
            </intent-filter>
        </service>
        <service android:name=".services.FCMMessageReceiverService">
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>

        <activity
            android:name="com.theartofdev.edmodo.cropper.CropImageActivity"
            android:theme="@style/AppTheme" />
        <activity android:name=".activity.NearbyUserActivity" />
        <activity
            android:name=".activity.GroupActivity"
            android:theme="@style/AppTheme.NoActionBar" />
        <activity android:name=".activity.EventEditActivity" />
        <activity android:name=".activity.FullscreenImageActivity" />
        <activity
            android:name=".activity.InvitesActivity"
            android:theme="@style/AppTheme.NoActionBar" />
        <activity
            android:name=".activity.InviteUserActivity"
            android:theme="@style/AppTheme.NoActionBar" />
        <activity android:name=".activity.OtherUserProfileActivity" />
        <activity android:name=".activity.TeamsActivity" />
    </application>

</manifest>